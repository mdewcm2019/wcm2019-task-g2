var tipuesearch = {"pages": [{'title': '簡介', 'text': '組長 :\xa0 李承澤 40723210 \xa0  個人倉儲 \n 組員: \n 張詠全 40723125\xa0\xa0   個人倉儲 \n 廖豪樹 40723144\xa0 \xa0 個人倉儲 \n 李其叡 40723111\xa0 \xa0  個人倉儲 \n 王頊鑌 40723108\xa0 \xa0  個人倉儲 \n 許鐸鐙40426227\xa0 \xa0 個人倉儲 \n 俆敬倫40723124 \xa0 個人倉儲 \n 分組倉儲: https://mdewcm2019.github.io/wcm2019-task-g2 \n 分組blogger:\xa0 https://wcm2019-task-g2.blogspot.com/ \n 班級倉儲: https://github.com/scrum-1/wcm2019a \n', 'tags': '', 'url': '簡介.html'}, {'title': '網路連線設定', 'text': '了解機械設計系電腦輔助設計室電腦的網路設定, 其中包括 IPv4 網路與 IPv6 網路設定. 正常情況下, 電腦輔助設計室中的 64 台電腦透過 IPv4 協定下的 DHCP 與 NAT 上網, 各電腦以 DHCP client 取得 192.168.1.* 的網路位址, 然後以 NAT 的一組外部 IP 上網, 通常必須設定 Proxy Server 為 http://proxy.kmol.info:3128 後上網會比較順暢, 但若 8 台 Proxy Servers 無法正常運作時, 則取消 Proxy Server 的設定. 瀏覽器代理主機設定 了解如何設定 Google Chrome 與 Firefox 瀏覽器的代理主機設定. 申請 Github 帳號 利用 Gmail 帳號申請 Github 帳號, 申請後利用電子郵箱收信進行確認後, 就可以在 Github 上建立倉儲. \n', 'tags': '', 'url': '網路連線設定.html'}, {'title': '1.李承澤 40723210', 'text': '我的blogger文章: https://40723210.blogspot.com/2019/05/github.html \n 操作流程和影片: \n 1.進入網頁之後在按右上角符號裡的設定 \n 2.滾到最下面>按進階>點擊 (開啟proxy設定) \n 3.點選LAN設定>打開proxy>輸入140.130.17.32>3128即可 \n 4.創建github帳戶，帳號是s加上學號，email是用學校給的 \n 我的教學影片: https://youtu.be/T6CIPW9ujT0 \n IPv6 環境設定 操作過程: \n 1.進入控制台開啟網路連線 \n 2.選擇自己所用的網路 > 右鍵內容 \n 3.勾選IPV6並取消IPV4，點選進入IPV6 \n 4.使用DNS輸入 2001:b000:168::1 \n 5.在網頁的proxy中設定完即可 \n 我的教學影片: https://youtu.be/uw8-NoNFpm0 \n \n', 'tags': '', 'url': '1.李承澤 40723210.html'}, {'title': '1.張詠全40723125', 'text': '我的網站: https://s40723125.github.io/content/%E4%BF%AE%E6%94%B9proxy.html \n 修改proxy \n 1. 開啟 Chrome 瀏覽器 \n 2. 點選右上方三條線的方塊。 \n 3. 點選「設定」。 \n 4. 點選「顯示進階設定…」 \n 5. 選擇網路項目的「開啟 Proxy 設定…」。 \n 6. 選擇連線頁面的「區域網路設定」。 \n 7點選「LAN設定」。 \n \n \n \xa0更改網路設定 \n 1.點選網路與網際設定 \n 2.變更介面卡選項 \n 3.選擇你連線的網路>右鍵>內容。進行更改 \n \n \n', 'tags': '', 'url': '1.張詠全40723125.html'}, {'title': '1.李其叡40723111', 'text': '了解機械設計系電腦輔助設計室電腦的網路設定, 其中包括 IPv4 網路與 IPv6 網路設定. \n \n', 'tags': '', 'url': '1.李其叡40723111.html'}, {'title': '1.王頊鑌40723108', 'text': '1.進入網頁之後在按右上角符號裡的設定 \n 2.滾到最下面>按進階>點擊 (開啟proxy設定) \n 3.點選LAN設定>打開proxy>輸入140.130.17.32>3128即可 \n \n IPv6 環境設定 操作過程: \n 1.進入控制台開啟網路連線 \n 2.選擇自己所用的網路 > 右鍵內容 \n 3.勾選IPV6並取消IPV4，點選進入IPV6 \n 4.使用DNS輸入 2001:b000:168::1 \n 5.在網頁的proxy中設定完即可 \n \n \n', 'tags': '', 'url': '1.王頊鑌40723108.html'}, {'title': '配置可攜程式環境', 'text': '取得 Windows 10 64 位元環境下的可攜程式環境 (下載\xa0 2019_cdb_w5.7z), 下載後解開目錄, 放入 USB3.0 規格以上的隨身碟或隨身硬碟. 以滑鼠點擊 start.bat 開啟可攜隨身系統, 以 stop.bat 關閉可攜隨身系統, 隨身碟必須在關閉所有應用程式執行下, 才可正常退出. 了解基本的 DOS (Disk Operating System) 指令 C:\\> 符號為 DOS 命令列視窗的回應 (Prompt), 表示目前在 C 槽硬碟的 \\ 根目錄, 若要切換到 Y 槽, 則在電腦的回應後, 輸入 Y:, 命令列將轉為 Y:\\> 若要更換目錄, 則使用 cd, 也就是 change directory 的意思, 例如: Y:\\>cd tmp 表示要從 Y 槽的根目錄更換到 tmp 目錄, 也就是 Y:\\tmp> 若要再回到 Y 槽的根目錄, 可以使用 cd .. 表示要從目前所在目錄, 往上跳回一個目錄, 也就是重新回到 Y 槽的根目錄. 另外, 無論目前位於哪一個子目錄, 也可以使用 cd \\ 直接回到根目錄. 或者從 Y:\\> 直接使用 cd \\tmp\\repo\\ssh\\wcm2019 直接從 Y 槽的根目錄, 跳進 Y:\\tmp\\repo\\ssh\\wcm2019> 此外, 常用的 DOS 指令有: dir - 列出目前所在目錄的內容 mkdir - 隨後加上要建立目錄的名稱, 可以建立目錄 cls - clear screen, 清除目前的命令列顯示的內容 \n', 'tags': '', 'url': '配置可攜程式環境.html'}, {'title': '2.李承澤 40723210', 'text': '我的blogger文章: https://40723210.blogspot.com/2019/05/blog-post_39.html \n 操作流程和影片: \n 1.進入老師的blogger點選 2019_cdb_w13.7z 連結 \n 2.下載完成以後，解壓縮放進自己的隨身碟 \n 3.點選start.bat來開啟程式 \n 4.輸入d: >\xa0cd tmp >\xa0cd 40723210(你的資料夾) \n 5.進入後就可以進行改動了 \n ★git指令可參照 簡介 內的重點筆記 \n 我的教學影片: https://youtu.be/lt86JkoTHnU \n \n \n', 'tags': '', 'url': '2.李承澤 40723210.html'}, {'title': '2.張詠全40723125', 'text': '我的網站 : \n https://s40723125.github.io/content/%E9%85%8D%E7%BD%AE%E5%8F%AF%E6%94%9C%E7%A8%8B%E5%BC%8F%E7%92%B0%E5%A2%83.html \n 1.網頁搜尋http://mde.tw/#/\xa0>\xa0網際內容管理網誌>2019_cdb_w13.7z \n 2.解壓縮cd2019_cdb_w13 \n 3.開啟cd2019_cdb_w13 > start \n 開始網站配置 \n \n', 'tags': '', 'url': '2.張詠全40723125.html'}, {'title': '2.李其叡40723111', 'text': '取得 Windows 10 64 位元環境下的可攜程式環境\xa0 ( 下載\xa0 2019_cdb_w5.7z ), 下載後解開目錄, 放入 USB3.0 規格以上的隨身碟或隨身硬碟. \n 開啟start.bat即可以開啟隨身系統，以開啟stop.bat結束隨身系統 \n Y:\xa0 即切換至Y槽 \n cd ___\xa0 \xa0 切換至某目錄 \n cd ..\xa0 回至上一層目錄 \n cd / 回至目前所在槽 \n dir\xa0 \xa0列出目前所在目錄的內容 \n mkdir\xa0 在所在位置建立目錄 \n cls\xa0\xa0 清除目前的命令列顯示的內容 \n', 'tags': '', 'url': '2.李其叡40723111.html'}, {'title': '2王頊鑌40723108', 'text': '1.進入老師的blogger點選 2019_cdb_w13.7z 連結 \n 2.下載完成以後，解壓縮放進自己的隨身碟 \n 3.點選start.bat來開啟程式 \n 4.個人是用F:>cd 4023108 \n 5.進入後就可以進行改動了 \n \n \n', 'tags': '', 'url': '2王頊鑌40723108.html'}, {'title': '倉儲改版', 'text': '建立 Git 倉儲, 並 clone 倉儲至近端工作後, 對遠端倉儲改版 可攜程式系統中已經內建 git, 可以在啟動 start.bat 後, 透過 path 的設定, 直接執行 git 指令. 建立 Git 倉儲, 共分為兩類, 一類是直接在 Github 網際介面下建立倉儲時, 要求建立 README.md 檔案, 之後可以直接在近端, 以 git clone 加上倉儲連線 URL, 將倉儲克隆一份到近端, 並以最新版本作為工作目錄, 使用者改版後, 可以直接透過 git add, commit 與 push 對遠端倉儲改版. 另一類則是故意在 Github 網際介面下建立倉儲時, 不要建立任何檔案, 而是在近端自行利用 git 指令建立倉儲架構, 新增內容後, 以 git remote add 設法在近端倉儲中納入 origin URL 後, 將近端倉儲版本新增提交推送到遠端. git add git add 可以用來新增一個檔案, 數個檔案, 或在之前提交後所新增的所有內容. git add 在 GIT 架構下, 是對所新增或修改的內容拍快照: git add . adds all modified and new (untracked) files in the current directory and all subdirectories to the staging area (a.k.a. the index), thus preparing them to be included in the next git commit . Any files matching the patterns in the .gitignore file will be ignored by git add git commit  git commit 執行之前, 必須使用 git config 建立臨時或永久的身分註記, 因為 GIT 在展開所有改版內容時, 必須明確登錄這些變更的作者與時間. 當使用者採用 git commit -m "改版說明訊息", 此次提交到 .git 目錄下的更動內容, 均會綁定使用者身分與改版所輸入的說明訊息. git push git push 在隨後沒有輸入遠端 URL 代號時, 表示要推送到 origin, 若透過 git remote add 設定其他代號與 URL 對應時, git push 加上代號, 就可以將此次的提交內容, 推送到指定的 URL 所在遠端倉儲. \n', 'tags': '', 'url': '倉儲改版.html'}, {'title': '3.李承澤 40723210', 'text': '我的blogger文章: https://40723210.blogspot.com/2019/05/blog-post_21.html \n 操作流程和影片: \n 1.先登入自己的github帳號。 \n 2.創建一個新的倉儲repositories。 \n 3.git clone\xa0 https://github.com/s40723210/40723210 \xa0。 \n 4.進入要存放該資料的資料夾tmp。 \n 5.開啟倉儲設定，點選要推送的branch。 \n 6.進入該倉儲資料夾，開始更新或變動。 \n 7.git status > git add . > git commit -m "標題" > git push。 \n ★git指令可參照 簡介 內的重點筆記 \n 我的教學影片: https://youtu.be/QBcUQYGy554 \n 我的blogger文章: https://40723210.blogspot.com/2019/04/ssh-keygit-clone-git-push.html \n 使用ssh key來進行git clone 與git push: \n \n 1.先把git config --edit --system裡面的helper = manager刪除後輸入:wq(是指儲存後退出)。 \n 2.進入控制台>使用者帳戶>認證管理員>windows認證>刪除現存的github帳號。 \n 3.輸入ssh-keygen -t rsa -b 4096 -C "github的email"。 \n 4.輸入你想存放的位子例如:Y:\\home\\.ssh/id_rsa。 \n 5.一直案Enter到結束。 \n 6.打開id_rsa並且全部複製>進入setting>SSH and\xa0GPG\xa0keys 。 \n 7.案New ssh key 貼上>輸入想要的名子儲存。 \n ★vi指令可參照 簡介 內的重點筆記 \n 我的教學影片: https://youtu.be/SJHMm3o5uEw \n', 'tags': '', 'url': '3.李承澤 40723210.html'}, {'title': '3.張詠全40723125', 'text': '我的網站 : \n https://s40723125.github.io/content/%E5%80%89%E5%84%B2%E9%85%8D%E7%BD%AE.html \n 1.先登錄git hub \n 2.點選圖貼>repositories>New \n 3.輸入 Repository name>create \n 4.git clone 你的網址 > \n 5.把 https://github.com/chiamingyen/cmsimfly 資料除了git都複製過去 \n 6.推送回github  存檔 \n 7.回到你的github >string>找到你的github page\xa0 \n \n', 'tags': '', 'url': '3.張詠全40723125.html'}, {'title': '3王頊鑌40723108', 'text': '1.先登入自己的github帳號。 \n 2.創建一個新的倉儲repositories。 \n 3.git clone \xa0 https://github.com/s40723108/40723108 \xa0 \xa0。 \n 4.進入要存放該資料的資料夾tmp。 \n 5.開啟倉儲設定，點選要推送的branch。 \n 6.進入該倉儲資料夾，開始更新或變動。 \n 7.git status > git add . > git commit -m "隨便打" > git push。 \n \n \n', 'tags': '', 'url': '3王頊鑌40723108.html'}, {'title': '靜態 CMSimfly', 'text': '利用 CMSimfly (https://github.com/chiamingyen/cmsimfly) 內容, 建立自己的 Github Pages 網站 設法利用  HTML5 CSS 與 Javascript , 納入與機械設計相關的靜態網頁內容 \n', 'tags': '', 'url': '靜態 CMSimfly.html'}, {'title': '4.李承澤 40723210', 'text': '我的blogger文章: https://40723210.blogspot.com/2019/05/cmsimfly.html \n 操作流程和影片: \n 1.進入自己的倉儲資料夾 2.輸入python wsgi.py來開啟動態 3.進行改版或更新save 4.完成後按generate_pages來儲存 5.輸入git status > git add . > git commit -m "標題" > git push 6.到自己的倉儲檢查沒問題後即可 \n ★我納入的 Javascript ，都在分支裡 我的教學影片: https://youtu.be/z8sUoVAqmDo \n', 'tags': '', 'url': '4.李承澤 40723210.html'}, {'title': '4.張詠全40723125', 'text': '我的網站 : \n https://s40723125.github.io/content/%E9%9D%9C%E6%85%8B%20CMSimfly.html \n 1.打開自己的倉儲資料夾 \n 2.輸入python wsgi.py \n 3.更改與更新倉儲 \n 4.generate_home \n 5.ungit>輸入上傳名稱>push \n 6.輸入帳密 \n 7.檢查是否更新成功 \n \n', 'tags': '', 'url': '4.張詠全40723125.html'}, {'title': '4.李其叡40723111', 'text': '利用 CMSimfly (https://github.com/chiamingyen/cmsimfly) 內容, 建立自己的 Github Pages 網站 \n 設法利用 \xa0 HTML5 CSS 與 Javascript , 納入與機械設計相關的靜態網頁內容 \n 1.進入自己的倉儲資料夾 2.輸入python wsgi.py來開啟動態 3.進行改版或更新save 4.完成後按generate_pages來儲存 5.輸入git status > git add . > git commit -m "標題" > git push 6.到自己的倉儲檢查沒問題後即可 \n', 'tags': '', 'url': '4.李其叡40723111.html'}, {'title': '4王頊鑌40723108', 'text': '操作流程和影片: \n 1.進入自己的倉儲資料夾 2.輸入python wsgi.py來開啟動態 3.進行改版或更新save 4.完成後按generate_pages來儲存 5.輸入git status > git add . > git commit -m "標題" > git push \n \n', 'tags': '', 'url': '4王頊鑌40723108.html'}, {'title': 'Mobile 網站內容', 'text': '學習如何使用 CMSimfly, 在網站中加入各種內容 (導入 Bootstrap frontend framework) 使用 Flask, bs4 與 lxml 模組 了解 CMSimfly 如何建構, 並且嘗試修改現有功能, 除錯或建立自己的網際內容管理系統 \n', 'tags': '', 'url': 'Mobile 網站內容.html'}, {'title': '5.李承澤 40723210', 'text': '我的blogger文章: https://40723210.blogspot.com/2019/05/mobile.html \n 操作流程和影片: \n 1.要使用老師模板的話，先進到老師的Github 2.點選系統開發 > Mobile 網站內容 > 套用模板一 3.進到連結後下載zip > 解壓縮 >改名成chimper 4.進到要改的倉儲 >\xa0 將資料夾放入static資料夾內 5.開起一個老師的新模板倉儲 > 以Raw打開cmsimfly.leo 6.複製全部 > 到自己的倉儲cmsimfly.leo > 貼上並儲存 7.以Raw打開老師的flaskapp.py > 一樣步驟貼上並儲存 8.進入動態更改 > 直接按generate_pages儲存即可 我的教學影片: https://youtu.be/DKVSZYUkotI \n \n', 'tags': '', 'url': '5.李承澤 40723210.html'}, {'title': '5王頊鑌40723108', 'text': '操作流程和影片: \n 1.要使用老師模板的話，先進到老師的Github 2.點選系統開發 > Mobile 網站內容 > 套用模板一 3.進到連結後下載zip > 解壓縮 >改名成chimper 4.進到要改的倉儲 >\xa0 將資料夾放入static資料夾內 5.開起一個老師的新模板倉儲 > 以Raw打開cmsimfly.leo 6.複製全部 > 到自己的倉儲cmsimfly.leo > 貼上並儲存 7.以Raw打開老師的flaskapp.py > 一樣步驟貼上並儲存 8.進入動態更改 > 直接按generate_pages儲存即可 \n \n \n', 'tags': '', 'url': '5王頊鑌40723108.html'}, {'title': 'Virtual Host', 'text': 'Fossil SCM 如何利用 Fossil SCM, 在 Virtualbox 中的 Ubuntu 18.04-2 (8.5 GB) 建立類似 Github 的系統, 可以放入 CMSimfly 的靜態網頁 Ubuntu 18.04 (https://www.ubuntu.com/about/release-cycle), 配置網路連線, 然後架構 uwsgi 環境下的 CMSimfly 動態網站, 或建立 Fossil SCM 用來伺服管理 CMSimfly 下有版次管理的靜態網頁, 或利用 nginx 伺服無版次管理的 CMSimfly 靜態網頁. \n \n', 'tags': '', 'url': 'Virtual Host.html'}, {'title': '6.李承澤 40723210', 'text': '我的blogger文章: https://40723210.blogspot.com/2019/05/virtual-host.html \n 操作流程和影片: \n 1.google輸入ubuntu > 點選官網 > 下載 ubuntu server 2.打開virtualbox > New > 輸入名子 > 4096 MB 3.Cearte > VMDK > Dynamically > 500.00 GB 4.Sttings > Network > bridged Adapter > 進入網路中心 5.選擇電腦所使用的連接網路 > ok > Start 6.選取剛剛所下載的ubuntu > 開始 > 選取語言 7.Enter >\xa0 Enter > 輸入proxy :http://140.130.17.3:3128 8. Enter \xa0>\xa0 Enter \xa0>\xa0 Enter \xa0> continue > 全部都打一樣的 9.space >\xa0 Enter \xa0>\xa0 Enter \xa0> 再輸入帳密 > 即可開始設定 10. \xa0輸入 sudo apt install uwsgi 來安裝uwsgi 我的教學影片: https://youtu.be/03R3tUvTyIQ \xa0 \n 開始設定的流程 \n 我的blogger文章: https://40723210.blogspot.com/2019/06/virtual-host-2.html \n 根據老師的教學步驟: 1. 安裝最新版的 Virtualbox 2. 建立 Ubuntu 18.04 虛擬主機 3. 以網路卡橋接啟動 Ubuntu 伺服器 4. 以 sudo apt install nginx 安裝 nginx WWW 伺服器 5. 以 ifconfig 查 Ubuntu 伺服器的 IP, 測試 nginx 伺服器是否可以連線 6. 以 Windows 10\xa0 下的 Filezilla client, 將編輯好的 nginx 設定檔案送到 Ubuntu 7.\xa0利用 Ubuntu 指令將設定檔案搬至設定位置後, 以 /etc/init.d/nginx restart 重新啟動 nginx 8. 在 Ubuntu 中以 sudo apt install uwsgi 安裝 uwsgi 9. 在 Windows 10 編輯 uwsgi 與 nginx 所需的設定檔案, 完成後以 filezilla 送至 Ubuntu. 10. 將 CMSimfly 程式碼送到 Ubuntu 伺服器中對應目錄後. 11. 在 Ubuntu 建立 cmsimfly 服務, 並設定隨機啟動. 12. 完成後, 在 Windows 10 以瀏覽器連線至 CMSimfly, 確認動態網頁與靜態網頁可以在虛擬主機中正常啟動. 老師的blogger: https://2019wcm.blogspot.com/ 最後我完成的虛擬主機連結:192.168.56.102 我的操作影片1: https://youtu.be/Aj-_ISvdLGI 我的操作影片2: https://youtu.be/SVL-Hk0yNew \n', 'tags': '', 'url': '6.李承澤 40723210.html'}, {'title': '6.張詠全40723125', 'text': '我的網站 : \n https://s40723125.github.io/content/Virtual%20Host.html \n 步驟. \n 開啟應用程式 Oracle VM VirtualBox \n 選擇 Tool / New \n 輸入名稱, Type :Linux\xa0 , Version : Ubuntu(64-bit) \n Next \n memory size\xa0 4000MB 以上 \n Next \n 選擇\xa0 Create a virtual hand disk file\xa0 \n Create \n VMDK(Virtual Machine Disk) \n Next \n Dynamically allocated \n Next \n 輸入500GB \n Create \n \n 參考圖片詳細步驟 https://s40723125.github.io/content/%E4%BB%8B%E9%9D%A2%E6%AD%A5%E9%A9%9F.html \n \n', 'tags': '', 'url': '6.張詠全40723125.html'}, {'title': '6.李其叡40723111', 'text': '架設虛擬主機 \n 1.google輸入ubuntu > 點選官網 > 下載 ubuntu server 2.打開virtualbox > New > 輸入名子 > 4096 MB 3.Cearte > VMDK > Dynamically > 500.00 GB 4.Sttings > Network > bridged Adapter > 進入網路中心 5.選擇電腦所使用的連接網路 > ok > Start 6.選取剛剛所下載的ubuntu > 開始 > 選取語言 7.Enter >\xa0 Enter > 輸入proxy :http://140.130.17.3:3128 8. Enter \xa0>\xa0 Enter \xa0>\xa0 Enter \xa0> continue > 全部都打一樣的 9.space >\xa0 Enter \xa0>\xa0 Enter \xa0> 再輸入帳密 > 即可開始設定 10. \xa0輸入 sudo apt install uwsgi 來安裝uwsgi \n \n', 'tags': '', 'url': '6.李其叡40723111.html'}, {'title': '6王頊鑌40723108', 'text': '步驟 \n 1.google輸入ubuntu > 點選官網 > 下載 ubuntu server 2.打開virtualbox > New > 輸入名子 > 4096 MB 3.Cearte> VMDK>動態> 500.00 GB 4.Sttings > Network > bridged Adapter > 進入網路中心 5.選擇電腦所使用的連接網路 > ok > Start 6.選取剛剛所下載的ubuntu > 開始 > 選取語言 7.Enter >\xa0 Enter > 輸入proxy :http://140.130.17.3:3128 8. Enter \xa0>\xa0 Enter \xa0>\xa0 Enter \xa0> continue > 全部都打一樣的 9.space >\xa0 Enter \xa0>\xa0 Enter \xa0> 再輸入帳密 > 即可開始設定 10. \xa0輸入 sudo apt install uwsgi 來安裝uwsgi \n \n', 'tags': '', 'url': '6王頊鑌40723108.html'}, {'title': 'Javascript', 'text': '設法利用\xa0 HTML5 CSS 與 Javascript , 納入與機械設計相關的靜態網頁內容6 \n \n', 'tags': '', 'url': 'Javascript.html'}, {'title': '國旗', 'text': '\n \n \n  以下利用 Brython 程式執行繪圖  \n \n \n \n \n <!-- for Brython -->\n<script src="./../static/brython.js"></script>\n<script src="./../static/brython_stdlib.js"></script>\n<!-- 啟動 brython() -->\n<p>\n<script>\nwindow.onload=function(){\nbrython(1);\n}\n</script>\n</p>\n<!-- 以下利用 Brython 程式執行繪圖 -->\n<p><canvas height="400" id="taiwan_flag" width="600"></canvas></p>\n<p>\n<script type="text/python3">\n# 導入 doc\nfrom browser import document as doc\nimport math\n  \n# 準備繪圖畫布\ncanvas = doc["taiwan_flag"]\nctx = canvas.getContext("2d")\n# 進行座標轉換, x 軸不變, y 軸反向且移動 canvas.height 單位光點\n# ctx.setTransform(1, 0, 0, -1, 0, canvas.height)\n# 以下採用 canvas 原始座標繪圖\nflag_w = canvas.width\nflag_h = canvas.height\ncircle_x = flag_w/4\ncircle_y = flag_h/4\n# 先畫滿地紅\nctx.fillStyle=\'rgb(255, 0, 0)\'\nctx.fillRect(0,0,flag_w,flag_h)\n# 再畫青天\nctx.fillStyle=\'rgb(0, 0, 150)\'\nctx.fillRect(0,0,flag_w/2,flag_h/2)\n# 畫十二道光芒白日\nctx.beginPath()\nstar_radius = flag_w/8\nangle = 0\nfor i in range(24):\n    angle += 5*math.pi*2/12\n    toX = circle_x + math.cos(angle)*star_radius\n    toY = circle_y + math.sin(angle)*star_radius\n    # 只有 i 為 0 時移動到 toX, toY, 其餘都進行 lineTo\n    if (i):\n        ctx.lineTo(toX, toY)\n    else:\n        ctx.moveTo(toX, toY)\nctx.closePath()\n# 將填色設為白色\nctx.fillStyle = \'#fff\'\nctx.fill()\n# 白日:藍圈\nctx.beginPath()\nctx.arc(circle_x, circle_y, flag_w*17/240, 0, math.pi*2, True)\nctx.closePath()\n# 填色設為藍色\nctx.fillStyle = \'rgb(0, 0, 149)\'\nctx.fill()\n# 白日:白心\nctx.beginPath()\nctx.arc(circle_x, circle_y, flag_w/16, 0, math.pi*2, True)\nctx.closePath()\n# 填色設為白色\nctx.fillStyle = \'#fff\'\nctx.fill()\n</script> \n', 'tags': '', 'url': '國旗.html'}, {'title': '國旗-改', 'text': 'By :  40723210 \n  for Brython  \n \n \n  啟動 brython()  \n \n \n \n  以下利用 Brython 程式執行繪圖  \n \n \n \n \n \n  for Brython  \n \n \n  啟動 brython()  \n \n \n', 'tags': '', 'url': '國旗-改.html'}, {'title': '國旗-3', 'text': 'By: 40723111 \n  for Brython  \n \n \n  啟動 brython()  \n \n \n \n  以下利用 Brython 程式執行繪圖  \n \n \n \n \n', 'tags': '', 'url': '國旗-3.html'}, {'title': '齒輪', 'text': '\n  啟動 Brython  \n \n \n  以下製作 button \n \n   Set Number of Gears \n <!-- 導入 Brython 標準程式庫 -->\n<script src="./../static/brython.js"></script>\n<script src="./../static/brython_stdlib.js"></script>\n<p></p>\n<!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\n// 設定 data/py 為共用程式路徑\nbrython({debug:1, pythonpath:[\'./../data/py\']});\n}\n</script>\n<p><canvas height="600" id="onegear" width="800"></canvas></p>\n<!-- 以下製作 button-->\n<div height="20" id="onegear_div" width="800"></div>\n<p><input id="n" type="text" value="22"><br> <button id="button">Set Number of Gears</button></p>\n<!-- 以下實際利用  Brython 繪圖-->\n<script type="text/python3">\nfrom browser import document as doc\nimport math\n# deg 為角度轉為徑度的轉換因子\ndeg = math.pi/180.\n# 定義 Spur 類別\nclass Spur(object):\n    def __init__(self, ctx):\n        self.ctx = ctx\n  \n    def create_line(self, x1, y1, x2, y2, width=3, fill="red"):\n        self.ctx.beginPath()\n        self.ctx.lineWidth = width\n        self.ctx.moveTo(x1, y1)\n        self.ctx.lineTo(x2, y2)\n        self.ctx.strokeStyle = fill\n        self.ctx.stroke()\n  \n    # 定義一個繪正齒輪的繪圖函式\n    # midx 為齒輪圓心 x 座標\n    # midy 為齒輪圓心 y 座標\n    # rp 為節圓半徑, n 為齒數\n    # pa 為壓力角 (deg)\n    # rot 為旋轉角 (deg)\n    # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷\n    def Gear(self, midx, midy, rp, n=20, pa=20, color="black"):\n        # 齒輪漸開線分成 15 線段繪製\n        imax = 15\n        # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線\n        self.create_line(midx, midy, midx, midy-rp)\n        # a 為模數 (代表公制中齒的大小), 模數為節圓直徑(稱為節徑)除以齒數\n        # 模數也就是齒冠大小\n        a=2*rp/n\n        # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍\n        d=2.5*rp/n\n        # ra 為齒輪的外圍半徑\n        ra=rp+a\n        # rb 則為齒輪的基圓半徑\n        # 基圓為漸開線長齒之基準圓\n        rb=rp*math.cos(pa*deg)\n        # rd 為齒根圓半徑\n        rd=rp-d\n        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd\n        # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小\n        # 將圓弧分成 imax 段來繪製漸開線\n        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd\n        if rd>rb:\n            dr = (ra-rd)/imax\n        else:\n            dr=(ra-rb)/imax\n        # tan(pa*deg)-pa*deg 為漸開線函數\n        sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg\n        for j in range(n):\n            ang=-2.*j*math.pi/n+sigma\n            ang2=2.*j*math.pi/n+sigma\n            lxd=midx+rd*math.sin(ang2-2.*math.pi/n)\n            lyd=midy-rd*math.cos(ang2-2.*math.pi/n)\n            for i in range(imax+1):\n                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd\n                if rd>rb:\n                    r=rd+i*dr\n                else:\n                    r=rb+i*dr\n                theta=math.sqrt((r*r)/(rb*rb)-1.)\n                alpha=theta-math.atan(theta)\n                xpt=r*math.sin(alpha-ang)\n                ypt=r*math.cos(alpha-ang)\n                xd=rd*math.sin(-ang)\n                yd=rd*math.cos(-ang)\n                # i=0 時, 繪線起點由齒根圓上的點, 作為起點\n                if(i==0):\n                    last_x = midx+xd\n                    last_y = midy-yd\n                # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點\n                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)\n                # 最後一點, 則為齒頂圓\n                if(i==imax):\n                    lfx=midx+xpt\n                    lfy=midy-ypt\n                last_x = midx+xpt\n                last_y = midy-ypt\n            # the line from last end of dedendum point to the recent\n            # end of dedendum point\n            # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標\n            # 下列為齒根圓上用來近似圓弧的直線\n            self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color)\n            for i in range(imax+1):\n                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd\n                if rd>rb:\n                    r=rd+i*dr\n                else:\n                    r=rb+i*dr\n                theta=math.sqrt((r*r)/(rb*rb)-1.)\n                alpha=theta-math.atan(theta)\n                xpt=r*math.sin(ang2-alpha)\n                ypt=r*math.cos(ang2-alpha)\n                xd=rd*math.sin(ang2)\n                yd=rd*math.cos(ang2)\n                # i=0 時, 繪線起點由齒根圓上的點, 作為起點\n                if(i==0):\n                    last_x = midx+xd\n                    last_y = midy-yd\n                # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點\n                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)\n                # 最後一點, 則為齒頂圓\n                if(i==imax):\n                    rfx=midx+xpt\n                    rfy=midy-ypt\n                last_x = midx+xpt\n                last_y = midy-ypt\n            # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標\n            # 下列為齒頂圓上用來近似圓弧的直線\n            self.create_line(lfx,lfy,rfx,rfy,fill=color)\ncanvas = doc[\'onegear\']\nctx = canvas.getContext("2d")\n  \n# 以 button 驅動的事件函式\ndef setgearnumber(e):\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\n    x = (canvas.width)/2\n    y = (canvas.height)/2\n    if doc["n"].value.isdigit():\n        n1 = int(doc["n"].value)\n    else:\n        n1= 25\n    # 設定齒輪參數\n    x = (canvas.width)/2\n    y = (canvas.height)/2\n    r = 0.6*(canvas.height/2)\n    pa = 20\n    # 繪出齒輪\n    Spur(ctx).Gear(x, y, r, n1, pa, "blue")\n#判定 button\nsetgearnumber(True)\ndoc[\'button\'].bind(\'click\',setgearnumber)\n</script> \n \n  以下實際利用  Brython 繪圖 \n \n', 'tags': '', 'url': '齒輪.html'}, {'title': '貪食蛇', 'text': 'By :  40723210 \n 0 \n  以下利用 Brython 程式執行繪圖  \n \n \n', 'tags': '', 'url': '貪食蛇.html'}, {'title': '期中報告', 'text': '張詠全 40723125\xa0\xa0 影片 \n 廖豪樹 40723144\xa0 影片 \n 李其叡 40723111\xa0 影片 \n 李承澤 40723210\xa0 影片 \n 王頊鑌 40723108\xa0 影片 \n 許鐸鐙40426227\xa0 影片 \n 俆敬倫40723124\xa0 影片 \n', 'tags': '', 'url': '期中報告.html'}, {'title': '期末報告', 'text': '李承澤 40723210  影片 \n \n \n 張詠全40723125   影片 \n 李其叡40723111 影片 \n \n 王頊鑌40723108 影片 \n', 'tags': '', 'url': '期末報告.html'}]};